"""Fill in a module description here"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['init_config']

# %% ../nbs/00_core.ipynb 3
import os, logging, configparser

# %% ../nbs/00_core.ipynb 4
syslog = logging.getLogger(f"root.{__name__}")


# %% ../nbs/00_core.ipynb 5
def init_config(config_file = os.path.join(os.getcwd(), 'edcompanion.ini')):

    if not hasattr(init_config, 'configurations'):
        init_config.configurations = {}

    if config_file in init_config.configurations:
        return configuration

    configuration = configparser.ConfigParser()
    
    def update_config():
        with open(config_file, 'w') as f:
            configuration.write(f)

    class _config_section_proxy():
        def __init__(self, section_key):
            self.section_key = section_key

        def __getitem__(self, key):
            return configuration.__getitem__(self.section_key).__getitem__(key)

        def __setitem__(self, key, value):
            configuration.__getitem__(self.section_key).__setitem__(key, str(value))
            update_config()

        def __delitem__(self, key):
            configuration.__getitem__(self.section_key).__delitem__(key)
            update_config()

        def __contains__(self, key):
            return configuration.__getitem__(self.section_key).__contains__(key)

        def __repr__(self):
            return configuration.__getitem__(self.section_key).__repr__()

    class _config_proxy():
        def __init__(self, config_file):
            configuration.read(config_file, encoding='utf-8')

        def __getitem__(self, key):
            return _config_section_proxy(key)

        def __setitem__(self, key, value):
            configuration.__setitem__(key, value)
            update_config()

        def __delitem__(self, key):
            configuration.__delitem__(key)
            update_config()

        def __contains__(self, key):
            return configuration.__contains__(key)

        def __repr__(self):
            return configuration.__repr__()
        
    init_config.configurations[config_file] = _config_proxy(config_file)

    return init_config.configurations[config_file]




